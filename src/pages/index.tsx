import { MantineProvider } from "@mantine/core";
import { signIn, signOut, useSession, SessionProvider } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import { NavbarLayout } from "../components/navbar";

export default function Home() {
  const hello = api.post.hello.useQuery({ text: "from tRPC" });
  const greetings = api.greetings.useQuery();
  const createPost = api.post.create.useMutation();


  // Use useSession hook to get session data


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MantineProvider>
        <NavbarLayout>
          <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b">
            <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16">
              <h1 className="text-5xl font-extrabold tracking-tight text-black sm:text-[5rem]">
                App Amigos
              </h1>
              <div className="flex flex-col items-center gap-2">
                <p className="text-2xl text-black">
                  {hello.data ? hello.data.greeting : "Loading tRPC query..."}
                </p>

              </div>
              <div className="flex flex-col items-center gap-2">
                <p className="text-2xl text-black">{greetings.data}</p>
                <button
                  className="rounded-full bg-black/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-black/20"
                  onClick={() => createPost.mutate({ name: "Test" })}
                >
                  Test Post
                </button>
                <AuthShowcase />
              </div>
            </div>
          </main>
        </NavbarLayout>
      </MantineProvider>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData, status: sessionStatus } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-black">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-black/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-black/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
      <p>{JSON.stringify(sessionStatus, null, 2)}</p>
      <p>{JSON.stringify(sessionData, null, 2)}</p>
      <SessionProvider session={sessionData}>
        <p>{JSON.stringify(sessionData, null, 2)}</p>
      </SessionProvider>
    </div>
  );
}
